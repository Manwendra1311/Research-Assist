{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manwendra chauhan\\\\Desktop\\\\Ai_project\\\\chat-bot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport html2pdf from 'html2pdf.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [domain, setDomain] = useState(\"VLSI\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const textAreaRef = useRef();\n  useEffect(() => {\n    const savedResponse = localStorage.getItem(\"lastResponse\");\n    if (savedResponse) setResponse(savedResponse);\n  }, []);\n  useEffect(() => {\n    if (response) localStorage.setItem(\"lastResponse\", response);\n  }, [response]);\n  const submitHandler = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const res = await axios.post(\"http://localhost:3001/chat\", {\n        prompt: prompt,\n        domain: domain\n      });\n\n      // Format the response to add paragraph breaks and handle specific formatting\n      const formattedResponse = res.data.response.split('\\n') // Split the response into lines\n      .map((line, index) => {\n        // Handle bold formatting and remove markings\n        const boldedLine = line.replace(/### (.+)/g, '<strong>$1</strong>') // Make text after ### bold\n        .replace(/\\*\\*\\*\\*(.+?)\\*\\*\\*\\*/g, '<strong>$1</strong>') // Make text within **** bold\n        .replace(/\\*\\*(.+?)\\*\\*/g, '<strong>$1</strong>'); // Make text within ** bold and remove the markings\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: boldedLine.trim()\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }, this);\n      });\n      setResponse(formattedResponse); // Set the formatted response\n    } catch (error) {\n      console.error(\"Error generating response:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCopyToClipboard = () => {\n    navigator.clipboard.writeText(response);\n  };\n  const handleClear = () => {\n    setPrompt(\"\");\n    setResponse(\"\");\n    localStorage.removeItem(\"lastResponse\");\n  };\n  const generatePDF = () => {\n    const content = document.querySelector('.content-display').innerHTML;\n    const pdfStyles = `\n      <style>\n        body {\n          font-family: 'Roboto', sans-serif;\n          line-height: 1.6;\n          padding: 20px;\n          text-align: justify;\n          color: #333;\n        }\n        .content-wrapper {\n          max-width: 600px;\n          margin: 0 auto;\n          padding: 20px;\n          box-sizing: border-box;\n        }\n        h1, h2, h3 {\n          text-align: center;\n          color: #2c3e50;\n        }\n        p {\n          margin: 10px 0;\n        }\n        ul {\n          padding-left: 20px;\n          margin: 10px 0;\n        }\n        li {\n          margin: 5px 0;\n        }\n      </style>\n    `;\n    const pdfContent = `\n      <div class=\"content-wrapper\">\n        ${pdfStyles}\n        <h1>Electronics Content Generated</h1>\n        <h2>Domain: ${domain}</h2>\n        <h3>Query:</h3>\n        <p>${prompt}</p>\n        <h3>Response:</h3>\n        <div>${content}</div>\n      </div>\n    `;\n\n    // Use `html2pdf` to generate and download the PDF\n    const options = {\n      margin: 0.5,\n      filename: 'electronics-content.pdf',\n      image: {\n        type: 'jpeg',\n        quality: 0.98\n      },\n      html2canvas: {\n        scale: 2\n      },\n      jsPDF: {\n        unit: 'in',\n        format: 'a4',\n        orientation: 'portrait'\n      }\n    };\n    html2pdf().set(options).from(pdfContent).save();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sidebar-title\",\n        children: \"Research Assist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-switcher\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: domain,\n          onChange: e => setDomain(e.target.value),\n          className: \"domain-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"VLSI\",\n            children: \"VLSI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Embedded Systems\",\n            children: \"Embedded Systems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Control Systems\",\n            children: \"Control Systems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Digital Systems\",\n            children: \"Digital Systems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark-mode-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDarkMode(!darkMode),\n          children: darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"prompt\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          className: \"prompt-input\",\n          placeholder: \"Write your electronics-related query...\",\n          maxLength: 200,\n          ref: textAreaRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"generate-button\",\n          disabled: isLoading,\n          children: isLoading ? 'Generating...' : 'Generate Content'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-display\",\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generatePDF,\n            className: \"action-button\",\n            children: \"Download PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCopyToClipboard,\n            className: \"action-button\",\n            children: \"Copy to Clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClear,\n            className: \"action-button clear-button\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CZd/enSRmTa2jRrJWO5EZxSaI6Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","html2pdf","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","response","setResponse","domain","setDomain","isLoading","setIsLoading","darkMode","setDarkMode","textAreaRef","savedResponse","localStorage","getItem","setItem","submitHandler","e","preventDefault","res","post","formattedResponse","data","split","map","line","index","boldedLine","replace","dangerouslySetInnerHTML","__html","trim","fileName","_jsxFileName","lineNumber","columnNumber","error","console","handleCopyToClipboard","navigator","clipboard","writeText","handleClear","removeItem","generatePDF","content","document","querySelector","innerHTML","pdfStyles","pdfContent","options","margin","filename","image","type","quality","html2canvas","scale","jsPDF","unit","format","orientation","set","from","save","className","children","value","onChange","target","onClick","onSubmit","name","placeholder","maxLength","ref","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Manwendra chauhan/Desktop/Ai_project/chat-bot/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport html2pdf from 'html2pdf.js'; \r\n\r\nfunction App() {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [domain, setDomain] = useState(\"VLSI\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const textAreaRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const savedResponse = localStorage.getItem(\"lastResponse\");\r\n    if (savedResponse) setResponse(savedResponse);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (response) localStorage.setItem(\"lastResponse\", response);\r\n  }, [response]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3001/chat\", {\r\n        prompt: prompt,\r\n        domain: domain\r\n      });\r\n  \r\n      // Format the response to add paragraph breaks and handle specific formatting\r\n      const formattedResponse = res.data.response\r\n        .split('\\n') // Split the response into lines\r\n        .map((line, index) => {\r\n          // Handle bold formatting and remove markings\r\n          const boldedLine = line\r\n            .replace(/### (.+)/g, '<strong>$1</strong>') // Make text after ### bold\r\n            .replace(/\\*\\*\\*\\*(.+?)\\*\\*\\*\\*/g, '<strong>$1</strong>') // Make text within **** bold\r\n            .replace(/\\*\\*(.+?)\\*\\*/g, '<strong>$1</strong>'); // Make text within ** bold and remove the markings\r\n  \r\n          return <p key={index} dangerouslySetInnerHTML={{ __html: boldedLine.trim() }} />;\r\n        });\r\n  \r\n      setResponse(formattedResponse); // Set the formatted response\r\n    } catch (error) {\r\n      console.error(\"Error generating response:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const handleCopyToClipboard = () => {\r\n    navigator.clipboard.writeText(response);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setPrompt(\"\");\r\n    setResponse(\"\");\r\n    localStorage.removeItem(\"lastResponse\");\r\n  };\r\n\r\n  const generatePDF = () => {\r\n    const content = document.querySelector('.content-display').innerHTML; \r\n    const pdfStyles = `\r\n      <style>\r\n        body {\r\n          font-family: 'Roboto', sans-serif;\r\n          line-height: 1.6;\r\n          padding: 20px;\r\n          text-align: justify;\r\n          color: #333;\r\n        }\r\n        .content-wrapper {\r\n          max-width: 600px;\r\n          margin: 0 auto;\r\n          padding: 20px;\r\n          box-sizing: border-box;\r\n        }\r\n        h1, h2, h3 {\r\n          text-align: center;\r\n          color: #2c3e50;\r\n        }\r\n        p {\r\n          margin: 10px 0;\r\n        }\r\n        ul {\r\n          padding-left: 20px;\r\n          margin: 10px 0;\r\n        }\r\n        li {\r\n          margin: 5px 0;\r\n        }\r\n      </style>\r\n    `;\r\n    const pdfContent = `\r\n      <div class=\"content-wrapper\">\r\n        ${pdfStyles}\r\n        <h1>Electronics Content Generated</h1>\r\n        <h2>Domain: ${domain}</h2>\r\n        <h3>Query:</h3>\r\n        <p>${prompt}</p>\r\n        <h3>Response:</h3>\r\n        <div>${content}</div>\r\n      </div>\r\n    `;\r\n\r\n    // Use `html2pdf` to generate and download the PDF\r\n    const options = {\r\n      margin: 0.5,\r\n      filename: 'electronics-content.pdf',\r\n      image: { type: 'jpeg', quality: 0.98 },\r\n      html2canvas: { scale: 2 },\r\n      jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' }\r\n    };\r\n\r\n    html2pdf()\r\n      .set(options)\r\n      .from(pdfContent)\r\n      .save();\r\n  };\r\n\r\n  return (\r\n    <div className={`app-container ${darkMode ? 'dark-mode' : ''}`}>\r\n      <aside className=\"sidebar\">\r\n        <h2 className=\"sidebar-title\">Research Assist</h2>\r\n        <div className=\"domain-switcher\">\r\n          <h3>Select Domain</h3>\r\n          <select value={domain} onChange={(e) => setDomain(e.target.value)} className=\"domain-dropdown\">\r\n            <option value=\"VLSI\">VLSI</option>\r\n            <option value=\"Embedded Systems\">Embedded Systems</option>\r\n            <option value=\"Control Systems\">Control Systems</option>\r\n            <option value=\"Digital Systems\">Digital Systems</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"dark-mode-toggle\">\r\n          <button onClick={() => setDarkMode(!darkMode)}>\r\n            {darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'}\r\n          </button>\r\n        </div>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <form onSubmit={submitHandler} className=\"form-container\">\r\n          <textarea\r\n            name=\"prompt\"\r\n            value={prompt}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            className=\"prompt-input\"\r\n            placeholder=\"Write your electronics-related query...\"\r\n            maxLength={200}\r\n            ref={textAreaRef}\r\n          />\r\n          <button type=\"submit\" className=\"generate-button\" disabled={isLoading}>\r\n            {isLoading ? 'Generating...' : 'Generate Content'}\r\n          </button>\r\n        </form>\r\n\r\n        {response && (\r\n          <div className=\"content-container\">\r\n            <div className=\"content-display\">\r\n              {response}\r\n            </div>\r\n            <div className=\"actions\">\r\n              <button onClick={generatePDF} className=\"action-button\">Download PDF</button>\r\n              <button onClick={handleCopyToClipboard} className=\"action-button\">Copy to Clipboard</button>\r\n              <button onClick={handleClear} className=\"action-button clear-button\">Clear</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,MAAM,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMmB,WAAW,GAAGjB,MAAM,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,MAAMmB,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC1D,IAAIF,aAAa,EAAER,WAAW,CAACQ,aAAa,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,EAAEU,YAAY,CAACE,OAAO,CAAC,cAAc,EAAEZ,QAAQ,CAAC;EAC9D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMa,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBV,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMW,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,4BAA4B,EAAE;QACzDnB,MAAM,EAAEA,MAAM;QACdI,MAAM,EAAEA;MACV,CAAC,CAAC;;MAEF;MACA,MAAMgB,iBAAiB,GAAGF,GAAG,CAACG,IAAI,CAACnB,QAAQ,CACxCoB,KAAK,CAAC,IAAI,CAAC,CAAC;MAAA,CACZC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACpB;QACA,MAAMC,UAAU,GAAGF,IAAI,CACpBG,OAAO,CAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC;QAAA,CAC5CA,OAAO,CAAC,wBAAwB,EAAE,qBAAqB,CAAC,CAAC;QAAA,CACzDA,OAAO,CAAC,gBAAgB,EAAE,qBAAqB,CAAC,CAAC,CAAC;;QAErD,oBAAO9B,OAAA;UAAe+B,uBAAuB,EAAE;YAAEC,MAAM,EAAEH,UAAU,CAACI,IAAI,CAAC;UAAE;QAAE,GAA9DL,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2D,CAAC;MAClF,CAAC,CAAC;MAEJ/B,WAAW,CAACiB,iBAAiB,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACR5B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAKD,MAAM8B,qBAAqB,GAAGA,CAAA,KAAM;IAClCC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACtC,QAAQ,CAAC;EACzC,CAAC;EAED,MAAMuC,WAAW,GAAGA,CAAA,KAAM;IACxBxC,SAAS,CAAC,EAAE,CAAC;IACbE,WAAW,CAAC,EAAE,CAAC;IACfS,YAAY,CAAC8B,UAAU,CAAC,cAAc,CAAC;EACzC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC,CAACC,SAAS;IACpE,MAAMC,SAAS,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACD,MAAMC,UAAU,GAAI;AACxB;AACA,UAAUD,SAAU;AACpB;AACA,sBAAsB5C,MAAO;AAC7B;AACA,aAAaJ,MAAO;AACpB;AACA,eAAe4C,OAAQ;AACvB;AACA,KAAK;;IAED;IACA,MAAMM,OAAO,GAAG;MACdC,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE,yBAAyB;MACnCC,KAAK,EAAE;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAK,CAAC;MACtCC,WAAW,EAAE;QAAEC,KAAK,EAAE;MAAE,CAAC;MACzBC,KAAK,EAAE;QAAEC,IAAI,EAAE,IAAI;QAAEC,MAAM,EAAE,IAAI;QAAEC,WAAW,EAAE;MAAW;IAC7D,CAAC;IAEDlE,QAAQ,CAAC,CAAC,CACPmE,GAAG,CAACZ,OAAO,CAAC,CACZa,IAAI,CAACd,UAAU,CAAC,CAChBe,IAAI,CAAC,CAAC;EACX,CAAC;EAED,oBACEnE,OAAA;IAAKoE,SAAS,EAAG,iBAAgBzD,QAAQ,GAAG,WAAW,GAAG,EAAG,EAAE;IAAA0D,QAAA,gBAC7DrE,OAAA;MAAOoE,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACxBrE,OAAA;QAAIoE,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAe;QAAAnC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDrC,OAAA;QAAKoE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BrE,OAAA;UAAAqE,QAAA,EAAI;QAAa;UAAAnC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBrC,OAAA;UAAQsE,KAAK,EAAE/D,MAAO;UAACgE,QAAQ,EAAGpD,CAAC,IAAKX,SAAS,CAACW,CAAC,CAACqD,MAAM,CAACF,KAAK,CAAE;UAACF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5FrE,OAAA;YAAQsE,KAAK,EAAC,MAAM;YAAAD,QAAA,EAAC;UAAI;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClCrC,OAAA;YAAQsE,KAAK,EAAC,kBAAkB;YAAAD,QAAA,EAAC;UAAgB;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1DrC,OAAA;YAAQsE,KAAK,EAAC,iBAAiB;YAAAD,QAAA,EAAC;UAAe;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxDrC,OAAA;YAAQsE,KAAK,EAAC,iBAAiB;YAAAD,QAAA,EAAC;UAAe;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNrC,OAAA;QAAKoE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BrE,OAAA;UAAQyE,OAAO,EAAEA,CAAA,KAAM7D,WAAW,CAAC,CAACD,QAAQ,CAAE;UAAA0D,QAAA,EAC3C1D,QAAQ,GAAG,eAAe,GAAG;QAAc;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAERrC,OAAA;MAAMoE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC5BrE,OAAA;QAAM0E,QAAQ,EAAExD,aAAc;QAACkD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBACvDrE,OAAA;UACE2E,IAAI,EAAC,QAAQ;UACbL,KAAK,EAAEnE,MAAO;UACdoE,QAAQ,EAAGpD,CAAC,IAAKf,SAAS,CAACe,CAAC,CAACqD,MAAM,CAACF,KAAK,CAAE;UAC3CF,SAAS,EAAC,cAAc;UACxBQ,WAAW,EAAC,yCAAyC;UACrDC,SAAS,EAAE,GAAI;UACfC,GAAG,EAAEjE;QAAY;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFrC,OAAA;UAAQyD,IAAI,EAAC,QAAQ;UAACW,SAAS,EAAC,iBAAiB;UAACW,QAAQ,EAAEtE,SAAU;UAAA4D,QAAA,EACnE5D,SAAS,GAAG,eAAe,GAAG;QAAkB;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAENhC,QAAQ,iBACPL,OAAA;QAAKoE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCrE,OAAA;UAAKoE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7BhE;QAAQ;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNrC,OAAA;UAAKoE,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBrE,OAAA;YAAQyE,OAAO,EAAE3B,WAAY;YAACsB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAY;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7ErC,OAAA;YAAQyE,OAAO,EAAEjC,qBAAsB;YAAC4B,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAiB;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5FrC,OAAA;YAAQyE,OAAO,EAAE7B,WAAY;YAACwB,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAC;UAAK;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnC,EAAA,CA3KQD,GAAG;AAAA+E,EAAA,GAAH/E,GAAG;AA6KZ,eAAeA,GAAG;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}